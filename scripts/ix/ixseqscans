#!/bin/ksh
# Copyright (c) 2009-2016 Fernando Nunes - domusonline@gmail.com
# License: This script is licensed as GPL V2 ( http://www.gnu.org/licenses/old-licenses/gpl-2.0.html )
# $Author: Fernando Nunes - domusonline@gmail.com $
# $Revision: 2.0.42 $
# $Date: 2018-09-11 22:59:28 $
# Disclaimer: This software is provided AS IS, without any kind of guarantee. Use at your own risk.
#             Although the author is/was an IBM employee, this software was created outside his job engagements.
#             As such, all credits are due to the author.


show_help()
{
	echo "${PROGNAME} [ -V ] | [ -h ] | [-r | -d ] [database[,...] ]">&2
	echo "     -V : shows version" >&2
	echo "     -h : shows this help" >&2
	echo "     -r : order by seqscans*rows" >&2
	echo "     -d : order by seqscans*data_pages" >&2
	echo "     database : restricts the info to the specified databases (comma separated list, default is all databases)">&2
}

show_version()
{
        echo "${PROGNAME}: Version ${VERSION}"
}

VERSION=`echo "$Revision: 2.0.42 $" | cut -f2 -d' '`
PROGNAME=`basename $0`
ORDER_BY_OPTION=nrows
arg_ok="hVrd"
while getopts ${arg_ok} OPTION
do
	case ${OPTION} in
	V)      #show version
		show_version
		exit 0
		;;
	h)   # show help
		show_help
		exit 0
		;;
	r)
		if [ "X$ORDER_BY_DATA_PAGES_FLAG" = "X1" ]
		then
			echo "$PROGNAME: Option ${OPTION} cannot be used with -d" >&2
			exit 1
		else	
			ORDER_BY_NROWS_FLAG=1
			ORDER_BY_OPTION=nrows
		fi
		;;
	d)
		if [ "X$ORDER_BY_NROWS_FLAG" = "X1" ]
		then
			echo "$PROGNAME: Option ${OPTION} cannot be used with -r" >&2
			exit 1
		else	
			ORDER_BY_DATA_PAGES_FLAG=1
			ORDER_BY_OPTION=npdata
		fi
		;;
	esac
done
shift `expr $OPTIND - 1`

SO=`uname -s | tr "[:upper:]" "[:lower:]"`
case $SO in
sunos*)
        AWK=nawk
        PS_CMD="ps -o \"time,comm\""
        ;;
osf*)
        PS_CMD="ps -o \"time,cmd\""
        AWK=nawk
        ;;
hp-ux)
        PS_CMD="export UNIX_STD=2003;ps -o \"time,comm\""
        AWK=gawk
        ;;
linux|*)
        PS_CMD="ps -o \"time,cmd\""
        AWK=gawk
        ;;
esac

case $ORDER_BY_OPTION in
nrows)
	WEIGHT_EXPRESSION="(NVL(t2.seq_scans,0) * NVL(t3.nrows,0))::INT8 weight_nrows"
	;;
npdata)
	WEIGHT_EXPRESSION="(NVL(t2.seq_scans,0) * t3.npdata)::INT8 weight_npdata"
	;;
*)
	echo "$PROGNAME: Error in ORDER BY expression" >&2
	exit 1
esac


if [ $# -gt 0 ]
then
	DATABASE_CLAUSE=`echo $1 | ${AWK} -F',' 'BEGIN { printf "AND t1.dbsname IN ( ";}
{
	for (f=1;f<=NF;f++)
	{
		if (f<NF)
			{printf "\"%s\",",$f}
		else
			{printf "\"%s\"",$f}
	}
}
END {printf " )"}'`
else
	DATABASE_CLAUSE=""
fi

TMP_FILE=/tmp/`basename $0`_$$.tmp
DBACCESS_TMP_FILE=/tmp/dbaccess_`basename $0`_$$.tmp
trap "rm -f ${TMP_FILE} ${DBACCESS_TMP_FILE}" 0
onstat -g ppf  | awk '{if ($12 != 0) {print $0}}' | grep "^0x" | sort -nk 12 | awk '{print $1"|"$12"|"}' >${TMP_FILE}

dbaccess sysmaster <<EOF 2>${DBACCESS_TMP_FILE} 1>&2

CREATE TEMP TABLE ixseqscans
(
        partnum VARCHAR(18),
        seq_scans INTEGER
) WITH NO LOG;
LOAD FROM ${TMP_FILE} INSERT INTO ixseqscans;


UNLOAD TO $TMP_FILE
SELECT
	TRIM(dbsname)||":"||TRIM(tabname) tablename,
	t2.seq_scans seqscans,
	t3.nrows rows,
	SUBSTR(FORMAT_UNITS(t3.npdata * t3.pagesize/1024, 'KB', 3),1,7) size,
	$WEIGHT_EXPRESSION
FROM
	systabnames t1, ixseqscans t2, sysptnhdr t3
WHERE
	t1.partnum = t2.partnum AND
	t3.partnum = t1.partnum $DATABASE_CLAUSE
ORDER BY 5 DESC, 3 DESC
EOF

RC=$?
if [ $RC != 0 ]
then
	printf "Error calling dbaccess ($RC):\n"
	cat ${DBACCESS_TEMP_FILE}
	exit 1
else
	awk -F'|' '
        function max_length(value, size)
        {
                currentsize=length(value);
                if ( currentsize <= size )
                        return(value);
                targetsize=size-2;
                resp="";
                if ( targetsize <= 0)
                {
                        for (f=1;f<=size;f++)
                                resp=sprintf("%s%c",resp,"*");
                        return(resp);
                }
                else
                {
			exponent=currentsize - targetsize;
			if (exponent > 9)
				targetsize--;
			if (exponent > 99)
				targetsize--;
			if (targetsize < 1 )
			{
				for (f=1;f<=size;f++)
					resp=sprintf("%s%c",resp,"*");
			}
			else
				resp=substr(value,1,targetsize) "e" exponent;
			return(resp);
                }
	}
BEGIN {

	printf "%-60s %-9s %-9s %-7s %-10s\n","Database:Tablename", "Seq Scans", "Nr. Rows", "Size", "Weight";
	printf "------------------------------------------------------------ --------- --------- ------- ----------\n"
}

{
	printf "%-60s %9s %9s %7s %10s\n", $1, max_length($2,9), max_length($3,9), $4, max_length($5,10);
}' $TMP_FILE
fi
